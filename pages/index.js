import Head from "next/head";
import Image from "next/image";
import { gql, useQuery, useMutation } from "@apollo/client";
// import { Category, Product } from "../models";
import styles from "../styles/Home.module.css";

const ProductQuery = gql`
  query ProductQuery {
    products {
      _id
      category
      description
      image
      name
      price
      quantity
    }
  }
`;
// const ViewerQuery = gql`
//   query ViewerQuery {
//     viewer {
//       id
//       email
//     }
//   }
// `;
const updateProductMutation = gql`
  mutation UpdateProduct($id: ID!, $product: ProductInput!) {
    updateProduct(id: $id, input: $product) {
      _id
      category
      description
      image
      name
      price
      quantity
    }
  }
`;

export default function Home() {
  const { data, loading, error } = useQuery(ProductQuery);
  const [updateProduct] = useMutation(updateProductMutation);
  console.log(data);
  console.log(loading);
  console.log(error);

  const productData = data?.products;
  console.log(productData);
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Home Page</h1>
      {!loading &&
        productData?.map(product => (
          <div key={product.name}>
            <h2>{product.name}</h2>
            <Image
              src="https://picsum.photos/200/300"
              width={300}
              height={200}
              alt={product.image}
            />
            <h5>{product.image}</h5>
            <p>{product.price}</p>
            <span>
              <button
                onClick={() =>
                  updateProduct({
                    variables: {
                      id: product._id,
                      product: {
                        quantity: product.quantity - 1,
                      },
                    },
                  })
                }
              >
                -
              </button>
              <input
                type="number"
                onChange={e =>
                  updateProduct({
                    variables: {
                      id: product._id,
                      product: {
                        quantity: parseInt(e.currentTarget.value),
                      },
                    },
                  })
                }
                value={product.quantity}
              />

              <button
                onClick={() =>
                  updateProduct({
                    variables: {
                      id: product._id,
                      product: {
                        quantity: product.quantity + 1,
                      },
                    },
                  })
                }
              >
                +
              </button>
            </span>
          </div>
        ))}
    </div>
  );
}
